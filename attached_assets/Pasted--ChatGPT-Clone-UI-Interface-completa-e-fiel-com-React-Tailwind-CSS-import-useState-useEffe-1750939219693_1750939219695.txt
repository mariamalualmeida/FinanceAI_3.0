// ChatGPT Clone UI - Interface completa e fiel com React + Tailwind CSS

import { useState, useEffect, useRef } from "react";
import { Menu, Send, User, Settings, HelpCircle, Plus } from "lucide-react";

export default function ChatGPTClone() {
  const [messages, setMessages] = useState([
    { role: "assistant", content: "Olá! Sou a Miguelita, sua assistente. Como posso te ajudar hoje?" }
  ]);
  const [input, setInput] = useState("");
  const [sidebarOpen, setSidebarOpen] = useState(true);
  const scrollRef = useRef(null);

  const handleSend = () => {
    if (!input.trim()) return;
    const newMessages = [...messages, { role: "user", content: input }];
    setMessages(newMessages);
    setInput("");
    setTimeout(() => {
      setMessages((prev) => [
        ...newMessages,
        { role: "assistant", content: "Estou processando sua solicitação. Aguarde um momento..." }
      ]);
    }, 800);
  };

  useEffect(() => {
    scrollRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  return (
    <div className="flex h-screen bg-gray-900 text-white">
      {/* Sidebar */}
      <aside className={`bg-gray-800 p-4 flex flex-col justify-between transition-all duration-300 ${
        sidebarOpen ? "w-64" : "w-16"
      } hidden md:flex`}>
        <div className="space-y-4">
          <button className="w-full flex items-center gap-2 bg-green-600 text-white py-2 px-3 rounded-lg">
            <Plus size={16} />
            {sidebarOpen && <span>Nova Conversa</span>}
          </button>
          <div className="space-y-2">
            <div className="bg-gray-700 p-3 rounded">Conversa 1</div>
            <div className="bg-gray-700 p-3 rounded">Conversa 2</div>
          </div>
        </div>
        <div className="space-y-3">
          <button className="flex items-center gap-2 text-sm text-gray-300">
            <User size={16} />
            {sidebarOpen && <span>Perfil</span>}
          </button>
          <button className="flex items-center gap-2 text-sm text-gray-300">
            <Settings size={16} />
            {sidebarOpen && <span>Configurações</span>}
          </button>
          <button className="flex items-center gap-2 text-sm text-gray-300">
            <HelpCircle size={16} />
            {sidebarOpen && <span>Ajuda</span>}
          </button>
        </div>
      </aside>

      {/* Conteúdo principal */}
      <main className="flex-1 flex flex-col">
        <header className="flex items-center justify-between p-4 border-b border-gray-700">
          <div className="flex items-center gap-2">
            <button className="md:hidden" onClick={() => setSidebarOpen(!sidebarOpen)}>
              <Menu size={24} />
            </button>
            <h1 className="text-lg font-semibold">Miguelita</h1>
          </div>
          <div className="text-sm text-gray-400 hidden md:block">Clonando a experiência do ChatGPT</div>
        </header>

        {/* Mensagens */}
        <div className="flex-1 overflow-y-auto p-6 space-y-4">
          {messages.map((msg, idx) => (
            <div
              key={idx}
              className={`max-w-2xl px-4 py-3 rounded-2xl whitespace-pre-wrap ${
                msg.role === "user" ? "bg-green-600 ml-auto" : "bg-gray-700 mr-auto"
              }`}
            >
              {msg.content}
            </div>
          ))}
          <div ref={scrollRef} />
        </div>

        {/* Input */}
        <footer className="p-4 border-t border-gray-700">
          <div className="flex items-center gap-2">
            <textarea
              value={input}
              onChange={(e) => setInput(e.target.value)}
              onKeyDown={(e) => {
                if (e.key === "Enter" && !e.shiftKey) {
                  e.preventDefault();
                  handleSend();
                }
              }}
              rows={1}
              placeholder="Digite sua mensagem..."
              className="flex-1 resize-none bg-gray-800 p-3 rounded-lg text-white focus:outline-none"
            />
            <button
              onClick={handleSend}
              className="p-3 bg-green-600 rounded-lg hover:bg-green-500"
            >
              <Send size={20} />
            </button>
          </div>
        </footer>
      </main>
    </div>
  );
}