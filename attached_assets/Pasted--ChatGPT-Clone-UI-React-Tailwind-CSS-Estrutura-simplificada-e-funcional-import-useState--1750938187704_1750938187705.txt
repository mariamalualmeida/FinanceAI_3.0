// ChatGPT Clone UI - React + Tailwind CSS
// Estrutura simplificada e funcional

import { useState } from "react";
import { Send } from "lucide-react";

export default function ChatGPTClone() {
  const [messages, setMessages] = useState([
    { role: "assistant", content: "Olá! Como posso te ajudar hoje?" }
  ]);
  const [input, setInput] = useState("");

  const handleSend = () => {
    if (!input.trim()) return;
    setMessages([...messages, { role: "user", content: input }]);
    setInput("");
    // Simular resposta da IA
    setTimeout(() => {
      setMessages((prev) => [
        ...prev,
        { role: "assistant", content: "Entendi! Estou processando sua solicitação." }
      ]);
    }, 1000);
  };

  return (
    <div className="flex h-screen bg-gray-900 text-white">
      {/* Sidebar */}
      <aside className="w-64 bg-gray-800 p-4 hidden md:flex flex-col justify-between">
        <div>
          <button className="w-full bg-green-600 text-white py-2 rounded-lg mb-4">Nova Conversa</button>
          <div className="space-y-2">
            <div className="bg-gray-700 p-2 rounded">Conversa 1</div>
            <div className="bg-gray-700 p-2 rounded">Conversa 2</div>
          </div>
        </div>
        <div className="space-y-2">
          <button className="text-sm text-gray-400">Perfil</button>
          <button className="text-sm text-gray-400">Configurações</button>
        </div>
      </aside>

      {/* Área de Chat */}
      <main className="flex-1 flex flex-col">
        <header className="p-4 border-b border-gray-700 text-lg font-semibold">
          Miguelita
        </header>

        {/* Mensagens */}
        <div className="flex-1 overflow-y-auto p-6 space-y-4">
          {messages.map((msg, idx) => (
            <div
              key={idx}
              className={`max-w-2xl px-4 py-3 rounded-2xl ${
                msg.role === "user" ? "bg-green-600 ml-auto" : "bg-gray-700 mr-auto"
              }`}
            >
              {msg.content}
            </div>
          ))}
        </div>

        {/* Input */}
        <footer className="p-4 border-t border-gray-700">
          <div className="flex items-center gap-2">
            <textarea
              value={input}
              onChange={(e) => setInput(e.target.value)}
              rows={1}
              placeholder="Digite sua mensagem..."
              className="flex-1 resize-none bg-gray-800 p-3 rounded-lg text-white focus:outline-none"
            />
            <button onClick={handleSend} className="p-2 bg-green-600 rounded-lg">
              <Send size={20} />
            </button>
          </div>
        </footer>
      </main>
    </div>
  );
}
