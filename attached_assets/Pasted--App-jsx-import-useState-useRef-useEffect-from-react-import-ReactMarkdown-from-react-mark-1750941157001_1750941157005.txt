// App.jsx
import { useState, useRef, useEffect } from 'react'
import ReactMarkdown from 'react-markdown'
import { motion } from 'framer-motion'
import {
  SendHorizonal,
  Paperclip,
  Moon,
  Sun,
  Plus,
  Settings,
  User,
  HelpCircle
} from 'lucide-react'

export default function App() {
  const [messages, setMessages] = useState([
    { sender: 'ia', text: 'Olá! Sou sua assistente. Como posso ajudar hoje?' }
  ])
  const [input, setInput] = useState('')
  const [darkMode, setDarkMode] = useState(true)
  const scrollRef = useRef(null)

  useEffect(() => {
    scrollRef.current?.scrollIntoView({ behavior: 'smooth' })
  }, [messages])

  const handleSend = () => {
    if (!input.trim()) return
    setMessages([...messages, { sender: 'user', text: input }])
    setInput('')
    setTimeout(() => {
      setMessages(prev => [
        ...prev,
        { sender: 'ia', text: 'Recebi sua mensagem!' }
      ])
    }, 1000)
  }

  const handleKeyDown = e => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault()
      handleSend()
    }
  }

  return (
    <div className={`${darkMode ? 'dark' : ''}`}>
      <div className="flex h-screen bg-white dark:bg-[#1e1e1e] text-black dark:text-white">
        {/* Sidebar */}
        <aside className="hidden md:flex flex-col w-64 bg-gray-100 dark:bg-gray-800 p-4">
          <button className="flex items-center gap-2 p-2 rounded-md bg-green-600 text-white mb-4">
            <Plus size={20} />
            Nova Conversa
          </button>

          <div className="flex flex-col gap-2 flex-1 overflow-y-auto">
            <div className="p-2 rounded-md hover:bg-gray-200 dark:hover:bg-gray-700 cursor-pointer">
              Conversa anterior
            </div>
          </div>

          <div className="flex flex-col gap-2">
            <button className="flex items-center gap-2 p-2 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-md">
              <User size={18} />
              Perfil
            </button>
            <button className="flex items-center gap-2 p-2 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-md">
              <Settings size={18} />
              Configurações
            </button>
            <button className="flex items-center gap-2 p-2 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-md">
              <HelpCircle size={18} />
              Ajuda
            </button>
            <button
              className="flex items-center gap-2 p-2 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-md"
              onClick={() => setDarkMode(!darkMode)}
            >
              {darkMode ? <Sun size={18} /> : <Moon size={18} />}
              {darkMode ? 'Modo Claro' : 'Modo Escuro'}
            </button>
          </div>
        </aside>

        {/* Chat Area */}
        <main className="flex flex-col flex-1">
          <header className="p-4 border-b border-gray-300 dark:border-gray-700">
            <h1 className="text-lg font-semibold">ChatGPT Clone</h1>
          </header>

          <section className="flex-1 overflow-y-auto p-4 space-y-4">
            {messages.map((msg, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                className={`p-3 rounded-xl max-w-[70%] whitespace-pre-wrap ${
                  msg.sender === 'user'
                    ? 'bg-green-600 text-white ml-auto'
                    : 'bg-gray-200 dark:bg-gray-700'
                }`}
              >
                <ReactMarkdown>{msg.text}</ReactMarkdown>
              </motion.div>
            ))}
            <div ref={scrollRef}></div>
          </section>

          <footer className="p-4 border-t border-gray-300 dark:border-gray-700">
            <div className="flex items-center gap-2">
              <button className="p-2 text-gray-600 dark:text-gray-300 hover:text-green-500">
                <Paperclip size={20} />
              </button>
              <textarea
                value={input}
                onChange={e => setInput(e.target.value)}
                onKeyDown={handleKeyDown}
                rows={1}
                className="flex-1 p-2 bg-gray-100 dark:bg-gray-700 rounded-md resize-none outline-none"
                placeholder="Digite sua mensagem..."
              />
              <button
                onClick={handleSend}
                className="p-2 text-green-600 hover:text-green-800"
              >
                <SendHorizonal size={20} />
              </button>
            </div>
          </footer>
        </main>
      </div>
    </div>
  )
}
